version: '3.8'
services:
  service:
    build: ./service/
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - cache
  order:
    build: ./order/
    restart: always
    depends_on:
      - cache
      - postgres
    environment:
      POSTGRES_USER: orderapp
      POSTGRES_PASSWORD: orderapps
      POSTGRES_DB: orderapp
  payment:
    build: ./payment/
    restart: always
    depends_on:
      - cache
  delivery:
    build: ./delivery/
    restart: always
    depends_on:
      - cache
  status:
    build: ./status/
    restart: always
    depends_on:
      - cache
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server
    volumes: 
      - cache:/data
  postgres:
    image: postgres:9.6.2-alpine
    restart: always
    ports:
     - 5432:5432
    environment:
      POSTGRES_USER: orderapp
      POSTGRES_PASSWORD: orderapps
      POSTGRES_DB: orderapp
    volumes:
      - ./db/:/docker-entrypoint-initdb.d
  zookeeper:
    image: debezium/zookeeper
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    container_name: kafka
    restart: always
    image: debezium/kafka
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  # postgres:
  #   image: debezium/example-postgres
  #   ports:
  #    - 5432:5432
  #   environment:
  #     POSTGRES_USER: orderapp
  #     POSTGRES_PASSWORD: orderapps
  #     POSTGRES_DB: orderapp
  connect:
    image: debezium/connect
    restart: always
    ports:
     - 8083:8083
    links:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
volumes:
  cache:
    driver: local